# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gmx247qCdmhWHuXghuVfZ8nuisOsqGQh
"""

import numpy as np
from numpy.linalg import inv
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import tree
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.graph_objects as go
import pandas as pd

dataset=pd.read_excel("dataset.xlsx")

data=pd.DataFrame(dataset)

data

x=data["OfficeSize"]
y=data["MonthlyRent"]

"""y=wx+b"""

plt.scatter(x,y)
 plt.xlabel("OfficeSize")
 plt.ylabel("MonthlyRent");

"""Split data into training and testing sets"""

x_train,x_test,y_train,y_test=train_test_split(x.to_numpy(),y.to_numpy(), test_size=0.25, random_state=5)

"""Linear regression model"""

linear_reg=LinearRegression()

"""Predict data"""

linear_reg.fit(x_train.reshape(-1,1),y_train)
linreg_rent=linear_reg.predict(x_test.reshape(-1,1))
d_tree_rent=decision_tree.predict(x_test.reshape(-1,1))
data_predict=pd.DataFrame({"OfficeSize":x_test,"MonthlyRent":y_test,"Predicted":linreg_rent})

data_predict

data_predict["y^"]=data_predict['MonthlyRent']- data_predict['Predicted']

data_predict

data_predict['y^ squared']=data_predict['y^']*data_predict['y^']

data_predict

"""Mean Squared Error"""

mean_squared_error(data_predict['MonthlyRent'],data_predict['Predicted'])

def mse(error_array):
  return np.dot(error_array,error_array)*(1/len(error_array))

mse(data_predict['y^'])

"""Graph the error"""

size_range=np.arange(x.min(),x.max())
rent_range_predicted=linear_reg.predict(size_range.reshape(-1,1))

fig=px.scatter(data_predict, x='OfficeSize', y='MonthlyRent')
fig.add_trace(go.Scatter(x=size_range,y=rent_range_predicted,mode='lines',name="Linear Regression Model"))
fig.show()

"""Find the minimum Mean Squared error
 
"""

mse_list=[]

for num in np.arange(-5500,5500,.1):
  mse_list.append(mse(data_predict['OfficeSize'] * linear_reg.coef_[0]+ num - data_predict['MonthlyRent']))

plt.scatter(np.arange(-5500,5500,.1)[mse_list.index(min(mse_list))],min(mse_list),color='red', s=250,label=f'Intercept Estimate: {np.arange(-5500,5500,.1)[mse_list.index(min(mse_list))]:.2f}\nMean Squared Error: {min(mse_list):.2f}',zorder=2)
plt.plot(np.arange(-5500,5500,.1),mse_list,lw=7,zorder=1)
plt.xlabel('Intercept Estimate')
plt.ylabel('Mean Squared Error')
plt.legend();

linear_reg.coef_[0]

"""Optimal solution
MonthlyRent=18.5033*OfficeSize+(-726.20)
"""

